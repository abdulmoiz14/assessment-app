version: "3.8"

services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: appdb
      MYSQL_PASSWORD: pass123
      MYSQL_ROOT_PASSWORD: pass123
    networks:
      - backend
    ports:
      - 3307:3306
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql

  api:
    build:
      context: ./backend
    environment:
      - VIRTUAL_HOST=stage-api.devlab.solutions
      - LETSENCRYPT_HOST=stage-api.devlab.solutions
      - LETSENCRYPT_EMAIL=your@email.com
    networks:
      - backend
      - proxy

  frontend:
    build:
      context: ./frontend
    environment:
      - VIRTUAL_HOST=stage-app.devlab.solutions
      - LETSENCRYPT_HOST=stage-app.devlab.solutions
      - LETSENCRYPT_EMAIL=your@email.com
    networks:
      - proxy

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    networks:
      - proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    depends_on:
      - nginx-proxy
    networks:
      - proxy

networks:
  backend:
  proxy:
